user  nginx;

worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {

    #
    # Determines how many clients will be served by each worker process.
    # (Max clients = worker_connections * worker_processes)
    #
    worker_connections  10240;

    #
    # Let each process accept multiple connections.
    # Accept as many connections as possible, after nginx gets notification
    # about a new connection.
    # May flood worker_connections, if that option is set too low.
    #
    multi_accept on;

    #
    # Preferred connection method for newer linux versions.
    # Essential for linux, optmized to serve many clients with each thread.
    #
    use epoll;

}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  #
  # Changes buffer limits acordingly to: https://www.digitalocean.com/community/tutorials/how-to-optimize-nginx-configuration
  #
  client_body_buffer_size 10K;
  client_header_buffer_size 1k;
  client_max_body_size 8m;
  large_client_header_buffers 4 4k;

  #
  # Decreases default timeout limits
  #
  client_body_timeout 12;
  client_header_timeout 12;
  keepalive_timeout 15;
  send_timeout 10;

  #
  # Log settings
  #
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log  /var/log/nginx/access.log  main;

  # copies data between one FD and other from within the kernel
  # faster than read() + write()
  sendfile  on;

  # send headers in one piece, it is better than sending them one by one
  tcp_nopush  on;

  # don't buffer data sent, good for small data bursts in real time
  tcp_nodelay on;

   # number of requests client can make over keep-alive -- for testing environment
  keepalive_requests 1000;

  # Enables gzip compression of served files which increased the web page loading times.
  gzip  on;
  # The ie6 don't likes gz compressed files.
  gzip_disable "msie6";
  gzip_min_length 1024;
  gzip_comp_level 1;
  gzip_vary on;
  gzip_proxied expired no-cache no-store private auth;
  gzip_types
    text/css
    text/javascript
    text/xml
    text/plain
    text/x-component
    application/javascript
    application/x-javascript
    application/json
    application/xml
    application/rss+xml
    application/atom+xml
    font/truetype
    font/opentype
    application/vnd.ms-fontobject
    image/svg+xml
    image/svg;



  # Enables gzip also for static files
  gzip_static on;

  # allow the server to close connection on non responding client, this will free up memory
  reset_timedout_connection on;

  server {
    listen       80;
    server_name ona-frontend;

    location / {
        root   /usr/share/nginx/html;
        index  index.html /index.htm;
        try_files $uri /index.html  =404;

        # Set the max cache age to one day.
        add_header Cache-Control "public, must-revalidate, no-cache";

        add_header X-Content-Type-Options "nosniff";
        # Enables XSS Protections in some browsers
        add_header X-XSS-Protection "1; mode=block";
        # Prevents ClickJacking by preventing to use Parloa in a iframe
        add_header X-Frame-Options "deny";
        # HSTS Header: Forces UA to behave HSTS conformant for one year.
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
    }

    location /health-check {
      return 200 'healthy';
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
  }
}
